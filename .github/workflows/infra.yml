name: terraform-deployment
run-name: Terraform deployment resources in Azure CI

on:
  push:
    branches: [ "main", "develop", "production"]
  pull_request:
    branches: [ "main", "develop", "production"]

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.terraform-output.outputs.test }}
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1  

    - name: Terraform Init
      run: terraform init
      working-directory: ./infra/terraform

    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./infra/terraform

    - name: Terraform Create a plan
      run: terraform plan -out "tfplan"
      working-directory: ./infra/terraform

    - name: Terraform show a plan
      run: terraform show "tfplan"
      working-directory: ./infra/terraform

    - name: Terraform apply a plan
      run: terraform apply --auto-approve
      working-directory: ./infra/terraform

    - name: Terraform output
      run: |
        OUTPUT_VAR1=$(terraform output aks)
        echo "::set-output name=VAR1::$OUTPUT_VAR1"
        echo "test=hello" >> "$GITHUB_OUTPUT"
      working-directory: ./infra/terraform

    - name: Terraform output created
      id: terraform-output
      run: |
        OUTPUT_VAR1=$(terraform output created)
         echo "::set-output name=VAR1::$OUTPUT_VAR1"
      working-directory: ./infra/terraform


  call-workflow-passing-data:
    uses: ./.github/workflows/dispatch.yaml
    with:
      config-path: "${{ github.event.action }}"
      output1: ${{ needs.terraform.outputs.output1 }}