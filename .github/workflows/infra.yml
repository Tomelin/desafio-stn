name: terraform-deployment
run-name: Terraform deployment resources in Azure CI

on:
  push:
    branches: [ "main", "develop", "production"]
  pull_request:
    branches: [ "main", "develop", "production"]

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    outputs:
      kube_config: ${{ steps.aks_cluster_name.outputs.CONFIG }}
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1  

    - name: Terraform Init
      run: terraform init
      working-directory: ./infra/terraform

    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./infra/terraform

    - name: Terraform Create a plan
      run: terraform plan -out "tfplan"
      working-directory: ./infra/terraform

    - name: Terraform show a plan
      run: terraform show "tfplan"
      working-directory: ./infra/terraform

    - name: Terraform apply a plan
      run: terraform apply --auto-approve
      working-directory: ./infra/terraform

    - name: Terraform output
      id: terraform-output
      run: |
        terraform output
      working-directory: ./infra/terraform

    - name: Terraform output debug1
      id: aks_cluster_name
      run: |
        OUTPUT=$(terraform output kube_config)
        echo "::set-output name=CONFIG::$OUTPUT"
      working-directory: ./infra/terraform

  deployment:
    runs-on: ubuntu-latest
    needs: terraform
    if: needs.terraform.result == 'success'
    steps:
      - uses: actions/checkout@v1
      - name: Debug kubeconfig
        run: |
          echo "${{ needs.terraform.outputs.kube_config }}" > /tmp/config.txt
          cat /tmp/config.txt
          rm -f /tmp/config.txt

  deploy_to_kubernetes_cluster:
    needs: terraform
    if: needs.terraform.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: test kube
        run:  kubectl get pods

  call_deployment:
    uses: ./.github/workflows/deploy.yaml
    needs: terraform
    if: needs.terraform.result == 'success'
    with:
      kube-config: ${{ needs.terraform.outputs.kube_config }}