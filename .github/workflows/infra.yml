name: terraform-deployment
run-name: Terraform deployment resources in Azure CI

on:
  push:
    branches: [ "main", "develop", "production"]
  pull_request:
    branches: [ "main", "develop", "production"]

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.terraform-output.outputs.test }}
      aks_cluster_name: ${{ steps.aks_cluster_name.outputs.aks_cluster_name }}
      created: ${{ steps.output_created.outputs.DATE }}
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1  

    - name: Terraform Init
      run: terraform init
      working-directory: ./infra/terraform

    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./infra/terraform

    - name: Terraform Create a plan
      run: terraform plan -out "tfplan"
      working-directory: ./infra/terraform

    - name: Terraform show a plan
      run: terraform show "tfplan"
      working-directory: ./infra/terraform

    - name: Terraform apply a plan
      run: terraform apply --auto-approve
      working-directory: ./infra/terraform

    - name: Terraform output
      id: terraform-output
      run: |
        OUTPUT_VAR1=$(terraform output aks)
        echo "::set-output name=VAR1::$OUTPUT_VAR1"
        echo "test=hello" >> "$GITHUB_OUTPUT"
      working-directory: ./infra/terraform

    - name: Terraform output debug1
      id: terraform_output_debug1
      run: |
        terraform output created
        
      working-directory: ./infra/terraform

    - name: Terraform output date created
      id: output_created
      run: |
        echo "DATE=$(terraform output created)" >> $GITHUB_OUTPUT
        
    - name: Terraform show date created
      id: show_created
      run: |
          echo "${{ steps.show_created.outputs.DATE }}""

      working-directory: ./infra/terraform
    - name: Terraform output debug2
      id: terraform_output_debug2
      run: |
        OUTPUT_AKS_NAME=$(terraform output -raw created)
        echo $OUTPUT_AKS_NAME
      working-directory: ./infra/terraform

    - name: Terraform output created
      id: aks_cluster_name
      run: |
        OUTPUT_AKS_NAME=$(terraform output -raw created)
        echo "::set-output name=aks_cluster_name::$OUTPUT_AKS_NAME"
      working-directory: ./infra/terraform

    - name: Terraform output show
      id: show
      run: |
        echo "${{ needs.terraform.outputs.aks_cluster_name }}"
      working-directory: ./infra/terraform

  call-workflow:
    needs: terraform
    uses: ./.github/workflows/deploy.yaml
    with:
      kube-config: "${{ needs.terraform.outputs.aks_cluster_name }}"

  consume:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - uses: actions/checkout@v4
      - name: Use value
        run: |
          echo "${{ needs.terraform.outputs.aks_cluster_name }}"
      - name: Use parse
        run: |
            OUTPUT=$(echo "${{ needs.terraform.outputs.aks_cluster_name }}")
            # Split and filter output (assuming "output created" is the second line)
            FILTERED_OUTPUT=$(echo "$OUTPUT" | tr '\n' ' ' | awk '{print $2}')  # Alternative approach
            echo "Filtered Output: $FILTERED_OUTPUT"